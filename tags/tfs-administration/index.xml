<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>TFS Administration on Giulio Vian's Blog!</title><link>http://blog.casavian.eu/tags/tfs-administration/</link><description>Recent content in TFS Administration on Giulio Vian's Blog!</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><copyright>This work is licensed under a Creative Commons Attribution 4.0 International License</copyright><lastBuildDate>Fri, 30 Jun 2017 00:00:00 +0000</lastBuildDate><atom:link href="http://blog.casavian.eu/tags/tfs-administration/index.xml" rel="self" type="application/rss+xml"/><item><title>Remainder: open those ports for TFS</title><link>http://blog.casavian.eu/post/2017-06-reminder-to-self/reminder-to-self/</link><pubDate>Fri, 30 Jun 2017 00:00:00 +0000</pubDate><guid>http://blog.casavian.eu/post/2017-06-reminder-to-self/reminder-to-self/</guid><description>To work on TFS Aggregator I use a number of virtual machines running different versions of Team Foundation Server. I also install the remote debugging tools (more info on remote debugging &amp;nbsp; ) inside the VM and I am good to go, except for a little tweak that I always forget. So I am writing about here as a reminder.
In my configuration the Virtual Machine in Hyper-V sees the network as Public while TFS setup, by default, opens the Firewall ports only on Private networks.</description></item><item><title>Remainder: open those ports</title><link>http://blog.casavian.eu/draft/2017-01-reminder-to-self/reminder-to-self/</link><pubDate>Fri, 27 Jan 2017 00:00:00 +0000</pubDate><guid>http://blog.casavian.eu/draft/2017-01-reminder-to-self/reminder-to-self/</guid><description>VMs sees the network as Public and by default TFS setup opens the Firewall only on Private networks.</description></item><item><title>Annoyed by TF276000 error?</title><link>http://blog.casavian.eu/2015/05/28/annoyed-by-tf276000/</link><pubDate>Thu, 28 May 2015 00:00:00 +0000</pubDate><guid>http://blog.casavian.eu/2015/05/28/annoyed-by-tf276000/</guid><description>Annoyed by this error?
[Full Analysis Database Sync]:
TF276000: The current Analysis Database Sync job has exited without making any changes. Either another Analysis Database Sync job is already in progress, or the Analysis Database Sync job cannot run because an Optimize Databases job is running. The next Analysis Database Sync job will start at its scheduled time.
It shows up in the Cube Status report of the Administrative Report Pack &amp;nbsp; , and you are using them, aren&amp;rsquo;t you?</description></item><item><title>Command line tool to manage Git repositories in TFS</title><link>http://blog.casavian.eu/2015/04/24/git-repo-management/</link><pubDate>Fri, 24 Apr 2015 00:00:00 +0000</pubDate><guid>http://blog.casavian.eu/2015/04/24/git-repo-management/</guid><description>In a previous post , I quickly touched on TfsGitAdmin.
I published the code on GitHub at https://github.com/giuliov/TfsGitAdmin and added new features to it:
Adds an additional Git repository to a Team Project Creates the default Git repository on a Team Project that was created without version control Deletes an existing Git repository List all Git repositories in a Team Project Renames an existing Git repository Some Usage Examples TfsGitAdmin add -s http://localhost:8080/tfs -c DefaultCollection -p MySampleProject -r MyAdditionalGitRepository Adds an additional Git repository to Team Project MySampleProject.</description></item><item><title>Why the second node is not showing in the Console?</title><link>http://blog.casavian.eu/2014/11/11/second-node-not-showing-in-console/</link><pubDate>Tue, 11 Nov 2014 00:00:00 +0000</pubDate><guid>http://blog.casavian.eu/2014/11/11/second-node-not-showing-in-console/</guid><description>A while ago, I was helping my US colleagues migrating their TFS to 2013. It was a serious work, as they moved from a TFS 2010 SP1 to 2013 Update 3.
They have everything in one Collection, which makes a Migration Upgrade &amp;nbsp; (or attach upgrade) feasible.
We designed a new infrastructure with Disaster Recovery in mind. In the old configuration they just mirrored the databases at the storage level, in the new one, SQL Always On manages the replica.</description></item><item><title>TfsSecurity wrapper</title><link>http://blog.casavian.eu/2014/11/06/tfssecurity/</link><pubDate>Thu, 06 Nov 2014 00:00:00 +0000</pubDate><guid>http://blog.casavian.eu/2014/11/06/tfssecurity/</guid><description>TfsSecurity &amp;nbsp; is an ugly but effective tool. I said ugly because the scope parameter is hard to get: you need to ask the database or go through the API.
This latter is a palatable option in PowerShell, so here is a sample script to create a Group in an existing Team Project.
[CmdletBinding()] param ( [Parameter(Mandatory=$true, Position=0)] [uri] $collection, [Parameter(Mandatory=$true, Position=1)] [string] $project, [Parameter(Mandatory=$true, Position=2)] [string] $groupName, [Parameter(Mandatory=$false, Position=3)] [string] $groupDescription = &amp;quot;&amp;quot; ) $ErrorActionPreference = 'Stop' Set-StrictMode -Version Latest $TFSSecurity = &amp;quot;${env:ProgramFiles(x86)}\Microsoft Visual Studio 12.</description></item><item><title>Automating TeamProject creation (Git included)</title><link>http://blog.casavian.eu/2014/10/28/automating-project-creation/</link><pubDate>Tue, 28 Oct 2014 00:00:00 +0000</pubDate><guid>http://blog.casavian.eu/2014/10/28/automating-project-creation/</guid><description>I get frequent request from my teams to create a new project, therefore I automated the task with a PowerShell script.
PowerShell Creation scripts The script algorithm goes like this:
Load the definition for the new project Validate the definition by checking the user accounts invoke the creation tool with the /validate option Creates the project using TFPT &amp;nbsp; Creates an Organizational Unit in Active Directory where placing the groups Creates the AD groups and add the user account Creates corresponding TFS groups Checks that user account belongs to one of the three AD groups that control the TFS Access Level — best known as Licensing I will spare you the code here as it is more than 100 lines long.</description></item><item><title>Do not leave your Collections off-line!</title><link>http://blog.casavian.eu/2014/10/27/do-not-leave-your-collections-off-line/</link><pubDate>Mon, 27 Oct 2014 00:00:00 +0000</pubDate><guid>http://blog.casavian.eu/2014/10/27/do-not-leave-your-collections-off-line/</guid><description>We have some unused collections and this seemed harmless, until I started accumulating problems.
Best Practices Analyzer (BPA) The first issue happened with BPA. It refuses starting a scan, if it sees off-line collections. Not a big deal, as I put them online just for this.
Lab Management I encountered a more serious issue with Lab Management configuration, so much that I opened a case with Microsoft Support.
I tried to change the Virtual Machine Manager server used by TFS, and I received an unpleasant HostShutdownException error.</description></item><item><title>TFS in PowerShell</title><link>http://blog.casavian.eu/2014/09/19/tfs-in-powershell/</link><pubDate>Fri, 19 Sep 2014 17:07:59 +0000</pubDate><guid>http://blog.casavian.eu/2014/09/19/tfs-in-powershell/</guid><description>I am re-factoring my PowerShell administration scripts and noticed many useful snippets to share, let&amp;rsquo;s start.
Where is Team Foundation Server installed? Scenario: your script runs TFSSecurity.exe; sadly this tool is not in the path and, worse, the path changes from one Team Foundation Server version to another.
The following function returns the Team Foundation Server path, e.g. C:\Program Files\Microsoft Team Foundation Server 12.0.
function Get-TeamFoundationServerInstallPath { if (Test-Path &amp;quot;HKLM:\SOFTWARE\Microsoft\TeamFoundationServer&amp;quot;) { $highestTFSversion = &amp;quot;{0:N1}&amp;quot; -f ( Get-ChildItem -Path &amp;quot;HKLM:\SOFTWARE\Microsoft\TeamFoundationServer&amp;quot; | Split-Path -Leaf | foreach { $_ -as [double] } | sort -Descending | select -First 1) $tfsPath = Get-ItemProperty -Path &amp;quot;HKLM:\SOFTWARE\Microsoft\TeamFoundationServer\$highestTFSversion&amp;quot; -Name InstallPath -ErrorAction SilentlyContinue if ($tfsPath) { $tfsPath.</description></item><item><title>A small nice touch from TFS 2013.2</title><link>http://blog.casavian.eu/2014/05/04/a-small-nice-touch-from-tfs-2013-2/</link><pubDate>Sun, 04 May 2014 00:00:00 +0000</pubDate><guid>http://blog.casavian.eu/2014/05/04/a-small-nice-touch-from-tfs-2013-2/</guid><description>No more fussing around to move the cache folder: TFS 2013 Update 2 add a nice link at your fingertips on the Administration Console.
Now, I just need to find how to script this setting…</description></item><item><title>Remove TFS Feature</title><link>http://blog.casavian.eu/2014/04/09/remove-tfs-feature/</link><pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate><guid>http://blog.casavian.eu/2014/04/09/remove-tfs-feature/</guid><description>Are you shuffling around the machines of your TFS environment? Repurposing them? Changing the roles?
Sometimes you need to remove some configured feature, like Build or Proxy. That&amp;rsquo;s easy to do in 5 simple steps.
From the Administration Console, select the Server node (1), on the right panel click on the Remove Feature link (2), select the feature to un-configure (3), mark to enable the Remove button (4), finally press the Remove button (5).</description></item></channel></rss>