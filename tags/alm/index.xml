<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ALM on Giulio Vian's Blog!</title><link>http://blog.casavian.eu/tags/alm/</link><description>Recent content in ALM on Giulio Vian's Blog!</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><copyright>This work is licensed under a Creative Commons Attribution 4.0 International License</copyright><lastBuildDate>Tue, 07 Mar 2017 00:00:00 +0000</lastBuildDate><atom:link href="http://blog.casavian.eu/tags/alm/index.xml" rel="self" type="application/rss+xml"/><item><title>Automate publishing documentation using Hugo and GitHub pages</title><link>http://blog.casavian.eu/2017/03/07/automate-publishing-documentation-using-hugo-and-github-pages/</link><pubDate>Tue, 07 Mar 2017 00:00:00 +0000</pubDate><guid>http://blog.casavian.eu/2017/03/07/automate-publishing-documentation-using-hugo-and-github-pages/</guid><description>Many of you knows my work on TFS Aggregator &amp;nbsp; . Since the beginning we opted for Markdown &amp;nbsp; as the format for the project documentation, at the beginning they were some files in a doc folder, then I moved the content to the project&amp;rsquo;s GitHub Wiki, today I use the same files to generate the GitHub pages at https://tfsaggregator.github.io/intro/.
In this post I will describe how this latter step works in detail to publish our open source project&amp;rsquo;s documentation.</description></item><item><title>Mixing TFVC and Git</title><link>http://blog.casavian.eu/2017/03/04/mixing-tfvc-and-git/</link><pubDate>Sat, 04 Mar 2017 00:00:00 +0000</pubDate><guid>http://blog.casavian.eu/2017/03/04/mixing-tfvc-and-git/</guid><description>It all started because I needed using files coming from a Git repository and additional files stored in classic Team Foundation Version Control (TFVC), all toghether in the same build.
The Options You have three options: the REST API, the tf.exe vc command or &amp;hellip; we will see.
Option 1 â€“ REST API My first attempt relied on a Powershell script to download the files from TFVC using REST API. It worked but performance is not that great as you have to download a file at a time in a loop.</description></item></channel></rss>